server:
    port: 8081
spring:
    datasource:
        url: jdbc:mysql://localhost:3306/microservices
        username: root
        password: root123
        driver-class-name: com.mysql.cj.jdbc.Driver

    jpa:
        hibernate:
            ddl-auto: update 
        show-sql: true
    application:
        name: USER-SERVICE
    config:
         import: optional:configserver:http://localhost:8085

    security:
        oauth2:
            resourceserver:
                jwt:
                  issuer-uri: https://dev-90740018.okta.com/oauth2/default
            client:
                registration:
                    my-internal-client:
                        provider: okta
                        authorizationGrantType: client_credentials
                        scope: internal
                        client-id: 0oab3z1qy8LZvL0oN5d7
                        client-secret: 6C5NEoC13basrxXw6gCozmjfVN1VB230ITbRhe_wwwj2Dltz3aBSsKiuaWjVkHp2

                provider:
                    okta:
                        issuerUri: https://dev-90740018.okta.com/oauth2/default





#eureka:
#    instance:
#        prefer-ip-address: true
#    client:
#        fetch-registry: true
#        register-with-eureka: true
#        service-url:
#            defaultZone: http://localhost:8761/eureka

#Circute Breaker


management:
    health:
        circuitbreakers:
            enabled: true
    endpoints:
        web:
            exposure:
                include: health

    endpoint:
        health:
            show-details: always

resilience4j:
    circuitbreaker:
        instances:
            ratingHotelBreaker:
                registerHealthIndicator: true
                eventConsumerBufferSize: 10
                failureRateThreshold: 50
                minimumNumberOfCalls: 5
                automaticTransitionFromOpenToHalfOpenEnabled: true
                waitDurationInOpenState: 6s
                permittedNumberOfCallsInHalfOpenState: 3
                slidingWindowSize: 5
                slidingWindowType: COUNT_BASED


#retry config
    retry:
        instances:
            ratingHotelService:
                maxAttempts: 3
                waitDuration: 5s




#ratelimiter
    ratelimiter:
        instances:
            userratelimiter:
                limitRefreshPeriod: 4s
                limitForPeriod: 2
                timeoutDuration: 0s
okta:
    oauth2:
        issuer: https://dev-90740018.okta.com/oauth2/default
        audience: api://default

